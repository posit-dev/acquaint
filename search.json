[{"path":"https://simonpcouch.github.io/acquaint/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Posit Software, PBC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simonpcouch.github.io/acquaint/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Couch. Author, maintainer. Winston Chang. Author. Charlie Gao. Author. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://simonpcouch.github.io/acquaint/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Couch S, Chang W, Gao C (2025). acquaint: Model Context Protocol R Session. R package version 0.0.0.9000, https://github.com/simonpcouch/acquaint.","code":"@Manual{,   title = {acquaint: Model Context Protocol For Your R Session},   author = {Simon Couch and Winston Chang and Charlie Gao},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/simonpcouch/acquaint}, }"},{"path":"https://simonpcouch.github.io/acquaint/index.html","id":"acquaint-","dir":"","previous_headings":"","what":"Model Context Protocol For Your R Session","title":"Model Context Protocol For Your R Session","text":"acquaint implements Model Context Protocol (MCP) R session. configured acquaint, tools like Claude Desktop Claude Code can: Peruse documentation packages installed, Check objects global environment, Retrieve metadata session platform. IMPORTANT: early proof concept. Use risk!","code":""},{"path":"https://simonpcouch.github.io/acquaint/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Context Protocol For Your R Session","text":"can install development version acquaint like : acquaint can hooked application supports MCP. example, use Claude Desktop, might paste following Claude Desktop configuration (macOS, ~/Library/Application Support/Claude/claude_desktop_config.json): , use Claude Code, might type terminal: , R session, call acquaint::mcp_session().","code":"pak::pak(\"simonpcouch/acquaint\") {   \"mcpServers\": {     \"r-acquaint\": {       \"command\": \"Rscript\",       \"args\": [\"-e\", \"acquaint::mcp_server()\"]     }   } } claude mcp add -s \"user\" r-acquaint Rscript -e \"acquaint::mcp_server()\""},{"path":"https://simonpcouch.github.io/acquaint/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Model Context Protocol For Your R Session","text":"Claude Desktop, ’ll write following: Using R packages installed, write code download data flights /Chicago airports 2024. typical chat interface, ’d wary two failure points : model doesn’t know packages installed. model correctly guesses packages installed, may enough information use packages baked weights write correct code.  first searching installed packages, Claude can locate anyflights package, seems like reasonable solution. model discovers package’s anyflights() function reads documentation, can pattern-match write correct code.","code":""},{"path":"https://simonpcouch.github.io/acquaint/reference/acquaint-package.html","id":null,"dir":"Reference","previous_headings":"","what":"acquaint: Model Context Protocol For Your R Session — acquaint-package","title":"acquaint: Model Context Protocol For Your R Session — acquaint-package","text":"goal acquaint enable LLM-enabled tools like Claude Code learn R packages installed using [Model Context Protocol](https://modelcontextprotocol.io/) (MCP). Tools configured acquaint can peruse package documentation learn use R packages even included training data.","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/acquaint/reference/acquaint-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"acquaint: Model Context Protocol For Your R Session — acquaint-package","text":"Maintainer: Simon Couch simon.couch@posit.co (ORCID) Authors: Winston Chang winston@posit.co Charlie Gao charlie.gao@posit.co (ORCID) contributors: Posit Software, PBC (03wc8by49) [copyright holder, funder]","code":""},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Model context protocol for your R session — mcp_server","title":"Model context protocol for your R session — mcp_server","text":"Together, functions implement model context protocol server R session.","code":""},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model context protocol for your R session — mcp_server","text":"","code":"mcp_server()  mcp_session()"},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp.html","id":"configuration","dir":"Reference","previous_headings":"","what":"Configuration","title":"Model context protocol for your R session — mcp_server","text":"mcp_server() configured MCP clients via Rscript command. example, use Claude Desktop, paste following Claude Desktop configuration (macOS, file.edit(\"~/Library/Application Support/Claude/claude_desktop_config.json\")):   , use Claude Code, might type terminal:   mcp_server() intended interactive use. server interfaces MCP client behalf R session. Use mcp_session() make R session available server. Place call acquaint::mcp_session() .Rprofile, perhaps usethis::edit_r_profile(), make every interactive R session start available server.","code":"{   \"mcpServers\": {     \"r-acquaint\": {       \"command\": \"Rscript\",       \"args\": [\"-e\", \"acquaint::mcp_server()\"]     }   } } claude mcp add -s \"user\" r-acquaint Rscript -e \"acquaint::mcp_server()\""},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model context protocol for your R session — mcp_server","text":"","code":"if (interactive()) { mcp_session() }"}]
