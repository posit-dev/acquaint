[{"path":"https://simonpcouch.github.io/acquaint/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Posit Software, PBC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simonpcouch.github.io/acquaint/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Couch. Author, maintainer. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://simonpcouch.github.io/acquaint/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Couch S (2025). acquaint: Model Context Protocol R Installation. R package version 0.0.0.9000, https://github.com/simonpcouch/acquaint.","code":"@Manual{,   title = {acquaint: Model Context Protocol For Your R Installation},   author = {Simon Couch},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/simonpcouch/acquaint}, }"},{"path":"https://simonpcouch.github.io/acquaint/index.html","id":"acquaint","dir":"","previous_headings":"","what":"Model Context Protocol For Your R Installation","title":"Model Context Protocol For Your R Installation","text":"goal acquaint enable LLM-enabled tools like Claude Code learn R packages installed using Model Context Protocol (MCP). Tools configured acquaint can peruse package documentation learn use R packages even weren’t included training data. acquaint written primarily TypeScript distributed R package ease distribution/install R users. Installing package ensures needed dependencies provides shortcut, mcp_config(), help configure tool applications. IMPORTANT: early proof concept. Use risk!","code":""},{"path":"https://simonpcouch.github.io/acquaint/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Context Protocol For Your R Installation","text":"can install development version acquaint like : acquaint can hooked application supports MCP. Use mcp_config() generate config machine common applications. example, Claude Code: , Claude Desktop:","code":"pak::pak(\"simonpcouch/acquaint\") library(acquaint)  mcp_config(\"Claude Code\") #> In a terminal, run: #>  #> claude mcp add -s \"user\" r-acquaint node /Users/simoncouch/Library/R/arm64/4.4/library/acquaint/node/dist/index.js mcp_config(\"Claude Desktop\") #> Run `file.edit(~/Library/Application Support/Claude/claude_desktop_config.json)` #>  #> Then, paste the following: #> { #>   \"mcpServers\": { #>     \"r-acquaint\": { #>       \"command\": \"node\", #>       \"args\": [\"/Users/simoncouch/Library/R/arm64/4.4/library/acquaint/node/dist/index.js\"] #>     } #>   } #> }"},{"path":"https://simonpcouch.github.io/acquaint/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Model Context Protocol For Your R Installation","text":"Claude Desktop, ’ll write following: Using R packages installed, write code download data flights /Chicago airports 2024. typical chat interface, ’d wary two failure points : model doesn’t know packages installed. model correctly guesses packages installed, may enough information use packages baked weights write correct code.  first searching installed packages, Claude can locate anyflights package, seems like reasonable solution. model discovers package’s anyflights() function reads documentation, can pattern-match write correct code.","code":""},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Model Context Protocol (MCP) configuration — mcp_config","title":"Generate Model Context Protocol (MCP) configuration — mcp_config","text":"function provides instructions configure acquaint LLM-enabled tools like Claude Code Claude Desktop.","code":""},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Model Context Protocol (MCP) configuration — mcp_config","text":"","code":"mcp_config(which = c(\"Claude Code\", \"Claude Desktop\"))"},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Model Context Protocol (MCP) configuration — mcp_config","text":"name application configure acquaint. Currently, one \"Claude Code\" \"Claude Desktop\".","code":""},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Model Context Protocol (MCP) configuration — mcp_config","text":"character vector containing MCP configuration instructions, invisibly. function also prints configuration console.","code":""},{"path":"https://simonpcouch.github.io/acquaint/reference/mcp_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Model Context Protocol (MCP) configuration — mcp_config","text":"","code":"mcp_config(\"Claude Code\") #> In a terminal, run: #>  #> claude mcp add -s \"user\" r-acquaint node /home/runner/work/_temp/Library/acquaint/node/dist/index.js  # Claude Desktop currently isn't available on Linux if (!identical(tolower(Sys.info()[[\"sysname\"]]), \"linux\")) {   mcp_config(\"Claude Desktop\") }"}]
