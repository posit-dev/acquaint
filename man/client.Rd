% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client.R
\name{client}
\alias{client}
\alias{mcp_tools}
\alias{set_mcp_config}
\title{Collect ellmer chats with tools from MCP servers}
\usage{
mcp_tools()

set_mcp_config(file)
}
\arguments{
\item{file}{A single string indicating the path to the acquaint MCP servers
configuration file. If one is not configured, acquaint will look for one in
\code{file.path("~", ".config", "acquaint", "config.json")}.}
}
\description{
\code{mcp_tools()} fetches tools from MCP servers configured in the acquaint
server config file at \code{set_mcp_config()} and converts them to a list of
tools compatible with the \verb{$set_tools()} method of \link[ellmer:Chat]{ellmer::Chat} objects.
}
\section{Configuration}{


acquaint uses the same .json configuration file format as Claude Desktop.
By default, the package will look to
\code{file.path("~", ".config", "acquaint", "config.json")}; you can edit that
file with \code{file.edit(file.path("~", ".config", "acquaint", "config.json"))},
or you can supply an alternative file path with \code{set_mcp_config()}.

For example, to configure \code{mcp_tools()} with GitHub's official MCP Server
\url{https://github.com/github/github-mcp-server}, I could write the following
in that file:

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "mcpServers": \{
    "github": \{
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "GITHUB_PERSONAL_ACCESS_TOKEN",
        "ghcr.io/github/github-mcp-server"
      ],
      "env": \{
        "GITHUB_PERSONAL_ACCESS_TOKEN": "<add_your_github_pat_here>"
      \}
    \}
  \}
\}
}\if{html}{\out{</div>}}
}

