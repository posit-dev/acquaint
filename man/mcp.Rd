% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server.R, R/session.R
\name{mcp_server}
\alias{mcp_server}
\alias{mcp}
\alias{mcp_session}
\title{Model context protocol for your R session}
\usage{
mcp_server()

mcp_session()
}
\description{
Together, these functions implement a model context protocol server for your
R session.
}
\section{Configuration}{


\code{\link[=mcp_server]{mcp_server()}} should be configured with the MCP clients via the \code{Rscript}
command. For example, to use with Claude Desktop, paste the following in your
Claude Desktop configuration (on macOS, at
\code{file.edit("~/Library/Application Support/Claude/claude_desktop_config.json")}):

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "mcpServers": \{
    "r-acquaint": \{
      "command": "Rscript",
      "args": ["-e", "acquaint::mcp_server()"]
    \}
  \}
\}
}\if{html}{\out{</div>}}

Or, to use with Claude Code, you might type in a terminal:

\if{html}{\out{<div class="sourceCode bash">}}\preformatted{claude mcp add -s "user" r-acquaint Rscript -e "acquaint::mcp_server()"
}\if{html}{\out{</div>}}

\strong{mcp_server() is not intended for interactive use.}

The server interfaces with the MCP client on behalf of your R session.
\strong{Use \code{\link[=mcp_session]{mcp_session()}} to make your R session available to the server.}
Place a call to \code{acquaint::mcp_session()} in your \code{.Rprofile}, perhaps with
\code{usethis::edit_r_profile()}, to make every interactive R session you start
available to the server.
}

\examples{
if (interactive()) {
mcp_session()
}

}
\seealso{
\itemize{
\item \code{\link[=mcp_set_tools]{mcp_set_tools()}} allows you to register any ellmer tools as the tools
that will be provided to the client.
\item The "Getting started with acquaint" vignette at
\code{vignette("acquaint", package = "acquaint")} delves into further detail
on setup and customization.
}
}
